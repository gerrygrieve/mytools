#!/usr/local/bin/perl -wT

# save the entered info to a file & redisplay
# this script is intended to management info that is editable by 
# the course intructors:  course.cgi is a more general tool

$ENV{PATH} = "/bin:/usr/bin";

use lib '/www/jobs/lib/';
use lib '/var/www/lib/perl/sql_lib';
use Debug;
use Job_Ad_MetaData;
use Job_Appl_Info3;
use PandA_html4;
use Jobs_HTML;
use newPAsql_Sessions;
use strict;
use CGI;
use CGI::Carp 'fatalsToBrowser';

my $DEBUG = 1;
Debug::Set_Debug($DEBUG);
my $this_script = "/cgi-bin/Jobs/xAdminwAdd";
my $title = " P and A Job Application Admin";
my $title2 = " ";
my $New = 0;	
my %All_Apps;
my $version = "0.8.1";
my $cut_date = 20090101;     #display jobs w "expires" after this
my $NAPPS_PER_PAGE = 20;
my ($wel, $fname);
my $Course;
my %Scount = ();
my $sp = '&nbsp;';
my $q = new CGI;
my $Hidden;
my @Allowed_Users = qw [ derek bonn  head map phillips grieve ];     
my $user = newPAsql_Sessions::getPHASuser();
#my $user = "derek";
print $q->redirect("https://secure.phas.ubc.ca/login.php?req_url=$this_script")
    unless $user;  
 
print $q->header(-type=> "text/html", -expires=>'now'), "\n";
print $q->start_html( -title  => "PandA Online Job Appl Admin ", 
                      -style  =>{'src'=>'/jobs/lib/job.css'},),"\n";
print $q->start_multipart_form("POST", $this_script), "\n";
   
#print "<h2> user; {$user}</h2>";
die " <h2>You are not an allowed user</h2> "  unless grep {/$user/} @Allowed_Users;
####     Dispatch table...
####
#### Edit Button Value       Written at line# in subroutine
####   unordered  		309		do_form
####   text      		313		do_form
####   save  			447		footer
####   back  			448  650	footer   do_thanks
####   Submit passwd  		702		do_Challagne

Form_Welcome();
#print "dump query...<br />";
dump_it();

   if ($q->param('Edit_App') )   { do_Edit_App(); }
elsif ($q->param('addapp')   )	 { do_Add_App(); }
elsif ($q->param('confirmed') )	 { do_Save(); }

elsif ($q->param('re-edit')  )   { do_Add_App(); }
elsif ($q->param('Summ') )	     { do_summary_page($q->param('SL') ); }
elsif ($q->param('Addr') )	     { do_mail_list($q->param('SL') ); }
elsif ($q->param('Sear_Appl') )	     { do_Sear_Appl($q->param('Sear_Appl') ); }
elsif ($q->param('Save_Edits') eq "Bail")  { do_admin_upload($q->param('Job_Appl') );}  
elsif ($q->param('Apps_Page'))             { do_apps_page(); }  
elsif ($q->param('Save_Edits') eq "Save")  { do_update(); }  
elsif ($q->param('Read_File') ) 	       { do_Read_File(); } 
elsif ($q->param('Delete_App'))            {  do_Delete(); }
elsif ($q->param('Job_Appl')  &&    
       $q->param('Show_Data') )		  	   { do_show_appl($q->param('Show_Data')); }
elsif ($q->param('Job_Appl')  &&
	   !$q->param('Show_Data') )		   { do_admin_upload($q->param('Job_Appl') ); }
elsif ($q->param('goto_File') eq "back" )  { do_FileUpload(); }
elsif (defined ($q->param('page')) ) 	   { do_apps_page(); }
elsif  ($q->param('Back'))  			   { do_apps_page(); }
elsif ($q->param('edit') ) 	       	#a submit from some page selected
{
    if ($q->param('edit') eq 'go')		           #do_search
    {
		do_search();
    } elsif ($q->param('edit') eq 'submit')         #submit from edit info page
    {
		do_submit( );
    } elsif ( $q->param('edit') eq 'Submit New App') { do_confirm();   }
	
    elsif ($q->param('edit') eq 'back')              {  do_mainpage(); }
    else {
	Debug::dsay(" main:: 94 -- call do_apps_page" );
        do_apps_page();
    }
}
else
{
    $wel = " ";
    do_mainpage();
}
print $q->endform;
print $q->end_html;
exit;

sub do_mainpage {
#   print "<h2> do_mainpage:: </h2>\n";
    my @curr_jobs = Job_Ad_MetaData::Get_Current_Jobs();
    my ($t);
 
    my $tdtopright = '<td valign="top" align="right">';
    my $tdtop      = '<td valign="top">';
    my $sp = '&nbsp;';
    my $cellpad = ' cellpadding="4" ';

    print qq{<table class="currjobs">\n}; 

    foreach my $cj ( sort by_JID @curr_jobs ) {
		my $id = $cj->id;
        my $expires = $cj->expires;
		$expires = 20991212 if ($DEBUG and $id eq "Fac-2099-01"); 
	
        $cut_date = 20150101;
        next if $expires < $cut_date;

#############
        my $title = $cj->title;
        my $lab = $cj->text . " id = " . $cj->id; 
        my $cid =  $q->submit(-name=>'edit',-value=>$cj->id);
        my $url = $cj->url;
        my $tlink= qq{<a href="$url">$title</a>};
        print qq{<tr class="currjobs"><td class="currjobs"> $tlink</td>
                     <td class="currjobs"> $cid</td></tr>\n};

        print qq{<tr><td  class="currjobs" colspan="6"><hr /></td></tr>};
    }
    print "<tr><td colspan=2>Search : ", $q->textfield(-name=>'search',
	                                      -default=>'',
	                                      -size=>30,
	                                      -maxlength=>50),
          "</td><td>",  $q->submit(-name=>'edit', -value=>"go"), "</td></tr>\n";
    print "</table></center>\n";
  return;
}
sub by_JID {
	my $ida = $a->id;
	my $idb = $b->id;
	my ($ya,$ja) = ($1, $2) if $ida =~ /(\d\d\d\d)-(\d\d)/;
	my ($yb,$jb) = ($1, $2) if $idb =~ /(\d\d\d\d)-(\d\d)/;
	
	return $ya <=> $yb ||
	       $ja <=> $jb;
}
sub do_submit 
{       
  	 Save_params();
         do_thanks($Hidden);
}

sub Save_params  {
     my @es = Job_Appl_Info3::get_elements();
     my $ja = new Job_Appl_Info3;
     my $id = $1 if ($q->param(-name=>"joblist") =~ /id = (\d\d\d\d-\d\d\d)/);
     print "My id is $id <br />";
     dump_it();
 
    foreach my $e (@es)
    {  
      my $value = $q->param(-name=>$e) ? $q->param(-name=>$e): "";
      print "Save_params:: element $e --> ", $value, "<br />\n";
      $ja->$e($value);
    }
    Job_Appl_Info3::saveit ($ja, $id);

    my $remote_ip = $ENV{'REMOTE_ADDR'};
      
    return;
}

sub footer
{
    print "<table><center>";
    print " <tr><td>",   $q->submit(-name=>'edit',-value=>'save'),                
           "</td><td>",  $q->submit(-name=>'edit',-value=>'back'), "</td></tr>\n";
    print "</table></center></form>\n";
    
    return  
}

sub welcome
{
     my $page_header = shift;

     my $pg_head =  $page_header ? $page_header : "";
     my $wel_text = $wel ? $wel : " ";

     print <<EndofWelcome2;
     <h2>$pg_head</h2>
     <p> $wel_text
     </p>
EndofWelcome2
   
    return;
}
sub Form_Welcome
{
     print welcome_text();   
    return;
}

sub print_query
{
    my @es = Job_Appl_Info3::get_elements();
    my $e;
    my $f = $q->param(-name=>"filename");
    
    my $value;
    my $t = Job_Appl_Info3::rd_file($f);

    print "<h2>Print Query </h2>\n <table>";
      print "</table>\n";
}

sub Hide_params
{
#    print "Hide_params call get_edit_flags <br />";

    my ($e, $value);
    my $Hidden = "";
    return $Hidden;
}

sub do_thanks
{
    my $Hidden = shift;
    my $fname = $q->param(-name=>"filename");

    $wel = "<h2> Thanks for the input... $fname</h2>";  
    welcome();
    my $of = Course_HTML::get_html_name($fname);
    print $Hidden;
    print "<table><center>";
    print '<tr><td>See your new Course page: </td>',
          '<td><a href="', $of, '">',$of,'</a></td></tr>',               
          "<tr><td>Another Course?</td><td>",  $q->submit(-name=>'edit',-value=>'back'), "</td></tr>\n";
    print "</table></center>\n";
    print "<p> ttfn.. </p>";
    return; 

}

sub dump_it
{
	print "<h2> Dump of the query </h2><br />\n";
        print $q->Dump;
        print "<hr />";
}

sub welcome_text
{
   my $out = "<h1>$title $version </h1>";

}
sub by_App_By_Spec 
{
   my $spec_wanted = shift;
   my $app  = shift;			# array refs to application objects
   my @out = ();
   foreach my $ja (@{$app})
   {
      next unless $ja->specialization =~ /$spec_wanted/;
      push @out, $ja;
   }
   return @out;
}

sub by_App 
{
   my $aa = $a->lname;
   my $bb = $b->lname;
   
   $aa cmp $bb;
}

sub do_confirm {
	use App_Input_Form;
	 
	my $jid = $q->param("Job_ID");
	Debug::dsay("This is do_Confirm line 287");
	my $out = App_Input_Form::do_confirm($jid, $q);
	
	print $out;
	return;
}

sub do_Save {
	use App_Input_Form;
	 
	my $jid = $q->param("Job_ID");
	Debug::dsay("This is do_Save line 301");
	my $out = App_Input_Form::Save_params($jid, $q);
	
	print $out;
	print $q->hidden('Job_ID', $jid), "\n";
	return;
}


sub do_Add_App {
	use App_Input_Form;
	my $jid = $q->param("edit");
	Debug::dsay("This is do_Add_App line 289");
	my $out = App_Input_Form::do_form($jid, $q);
	
	print $out;
	print $q->hidden('Job_ID', $jid), "\n";
	return;
}

sub do_apps_page {
   my $sp = '&nbsp;';
####
   my $jid = $q->param("edit") || $q->param("Job_ID");
   my @apps = Job_Appl_Info3::Get_Job_Appl_Info($jid);
   my @sorted_apps = @apps;
   my $ap_cnt = scalar(@apps);

   if ( $ap_cnt ) {
       @sorted_apps = (sort by_App @sorted_apps);
       my $page = $q->param('page') ? $q->param('page'): 0;
       display_page_index($jid, @sorted_apps);
       display_app_page($page, @sorted_apps);
   }
   Debug::dsay("do_apps_page line 305");
   print "<p>Return to Job Selection Page $sp", 
          $q->submit(-name=>'edit',-value=>'back'), 
         "</p>";
   print qq{<p> Create new applicant: $sp },
                $q->submit(-name=>'addapp',-value=>'Add New App'), 
			"</p>";

   print $q->hidden('Job_ID', $jid), "\n";
}
###

sub display_page_index
{
   my $jid = shift;
   my @sorted_apps = @_;
   my $page = 0;  
   my $cnt = 0;
   my $nbsp = "&nbsp;";

   my $napps = scalar @sorted_apps;


   my $mcol = 3;
   print "<table border=1 cellpadding=4>";
   print qq{<tr><td colspan="2"><scan class="ttitle">
		Page Index for $jid <br />
                Total number of apps is $napps  <br />
                There are a max of $NAPPS_PER_PAGE on a page</td>};
   while ( $cnt < $napps)
   {
        print "<tr>" if ($page%$mcol eq 0);
        my $i_app = $sorted_apps[$cnt];
        my $v = $i_app->File_Name;
        $v = (split'/', $v)[-2];
        print "<td><strong>Page:</strong>$nbsp ",
              $q->submit(-name=>'page',-value=>$page),
              "$nbsp starts with $v</td>";
        print "</tr>" if ($page%$mcol eq $mcol-1); 
        $cnt+= $NAPPS_PER_PAGE;
        $page++;
   }
   print "<tr><td><strong>Page:</strong>$nbsp ",
          $q->submit(-name=>'page',-value=>-1),
              "$nbsp show all applicants</td></tr>";

   print qq{<tr><td>} .  
          $q->submit(-name=>"Addr", value=>"Address List Page") . 
          qq{</td><td>} .
          $q->submit(-name=>"Summ", value=>"Summary Page") . 
          qq{</td></tr>}; 
   print "</table>";
}

sub display_app_page
{
   Debug::dsay("this is display_app_page");
   my $jid = $q->param("Job_ID") || $q->param(-name=>"edit");
   my $page = shift;
   my @apps = @_;
   Debug::dsay(" page {$page]");
   my $cnt = ($page < 0) ? 0 : $page * $NAPPS_PER_PAGE;
    
   my $cimg = '<img src="/images/checkmark_40x34.gif", 
                    width="30" height="26">';
   my $gck  = '<img src="/images/checkmark_green_40x34.gif", 
                    width="30" height="26">';

   my $blank = '&nbsp;';
   my %info = Job_Appl_Info3::File_Prompts();
   my $xspec = " ";
   my $napps = ($page < 0) ? scalar @apps : $NAPPS_PER_PAGE;
   $page = 1 if $page <0;
  

  
	my $last = ($#apps < ($page+1) * $NAPPS_PER_PAGE) 
              ? $#apps : $cnt+$napps-1;
	my $v = $apps[$cnt]->lname;
	my $vv = $apps[$last]->lname;
			  
 
	print "<h2>Page ....  $page  $v to $vv </h2>";
	if ($cnt > -1 )
	{
      print qq{<table class="appdata">\n};
      print "<tr><td>$sp</td><td>$sp</td><td>$sp</td><td>$sp</td>";
      print qq{  <td colspan="3">$cimg  Have an online file</td>};
      print qq{  <td colspan="3">$gck Info  included in CV</td></tr>};
      print qq{<tr><th class="appdata">$sp</th>
                 <th class="appdata">View App's Entry</th>
                 <th class="appdata">Applicant's Name</th>
                 <th class="appdata">Graduated From</th>};
      foreach my $t (sort {$info{$a}{sort} cmp $info{$b}{sort} } keys %info)
      {
         print qq{<th class="appdata">$info{$t}{sp}</th>};
      }
      print "</tr>";

    if ($napps > 0 ) {
        foreach my $i (0 .. $napps-1) {
            my $cclass = "";
            my $ia = $cnt + $i ;
            my $ja = $apps[$ia];
			my $app_dir = $ja->lname;
#            my $v = $ja->File_Name ?  $ja->File_Name : "";
#            $v = (split'/', $v)[-2];
            my $full_name = $ja->{fname} . $sp .
                            $ja->{mname} . $sp .
                            $ja->{lname};
            $cclass = qq{class="shortlist"} if ($ja->Status eq "SL");
            $cclass = qq{class="longlist"}  if ($ja->Status eq "LL");       
            my $xi = $ia + 1;
            print "<tr><td>$xi</td>\n";
            print "<td>", $q->submit(-name=>'Job_Appl',-value=>$app_dir), "</td>\n";
            print qq{   <td $cclass>$full_name</td>};
            my $gf = Jobs_HTML::truncate_Unames($ja->Grad_From);
            print  qq{ <td>$gf</td>};
            foreach my $t (sort {$info{$a}{sort} cmp $info{$b}{sort} } 
                            keys %info)
            {
               my $ck = $ja->{$t} ? $cimg : $blank;
               $ck = $gck if ( $ja->{$t} and $ja->{$t} =~ /^In/);
               print  '<td width="40">', "$ck</td>";
            }
            print  "</tr>";
            last if ($ia == $#apps);
          }
          print "</table>";
       }
  }

}
sub do_admin_upload
{
   my $this_appl = shift;
   my $jid = $q->param("Job_ID");
   print $q->hidden('Job_ID', $jid), "\n";
   print $q->hidden('Job_Appl',$this_appl ),"\n";

   print "<table><tr><td>Show the personal Info </td>";
   print "<td>", $q->submit(-name=>'Show_Data',-value=>$this_appl), "</td>";
   print "</tr></table>\n";
   print "<table>\n";
   Job_Appl_Info3::Set_xml_dir($jid);
   my $ja = Job_Appl_Info3::rd_file($this_appl);

   my %info = Job_Appl_Info3::File_Prompts();
   foreach my $t (sort {$info{$a}{sort} cmp 
                        $info{$b}{sort} } keys %info)
   {
       my $tl = $info{$t}{prompt};
       print qq{<tr><td><hr /></td></tr>} if ($tl =~ /1st/ );   
       print "<tr>";
       if ( $ja->{$t})
       {
         my $ltag = $t;
         $ltag =~ s/^Ref/Label/;
         my $taglabel = $ja->$ltag;
         my $url = $ja->{$t};
         $url =  ( $url =~ m[^/] ) 
              ?  Job_Appl_Info3::apath2url( $url)
              :  Job_Appl_Info3::rpath2url($jid,$this_appl, $url);

         my $anch = $ja->$ltag if ($ja->$ltag);
         $anch = (split "/", $taglabel)[-1] if ($taglabel =~ m[^/www]);
         my $col2 = ($taglabel =~ /In_CV/) 
                  ?  $taglabel
                  : '<a href="'.  $url .'">' . "View $anch</a>";
         print "<td>$tl</td><td>$col2</td2>\n";
       } else
       {
         print "<td>$tl</td>\n";
         my $ufile = "upload_" . $t;
         print "<td>", $q->filefield(-name=>$ufile,
                                     -default=>'starting value',
                                     -size=>30,
                                     -maxlength=>180),
            "</td>\n";
         if ($info{$t}{ancill} eq "Y" )
         {
            my $ckbox = "Ancill_". $t;
            my $ckecked = "";
            print qq{<td align="left"> included in CV file ?   }, 
                 $q->checkbox(-name=>$ckbox, -label=> "", $ckecked), "<td>"; 
         }
     }
     if ($info{$t}{userp} )		     # userp -- is user defined label
     { 
         my $ltag = $t;
         $ltag =~ s/^Ref/Label/;
         $ltag =~ s/_file/_label/;
         my $anch = $ja->$ltag ? $ja->$ltag : "";
         print "<td>New Label : ";
         print $q->textfield(-name=>$ltag,-size=>30, -default=>$anch);
         print  "</td>";
      }
      print "</tr>\n";
    
    }
    print "</table>";
    print "<p><table border=0 cellspacing=10>";
    print "<tr><td>", $q->submit(-name=>'Read_File',-value=>"Upload?"), 
          "</td>\n";
    print "<td>", $q->submit(-name=>'Edit_App',-value=>"Edit"), "</td>\n";
    print "<td>", $q->submit(-name=>'Delete_App', -value=>"Delete?"), 
           "</td>\n";
    print "<td>", $q->submit(-name=>'Apps_Page', -value=>"Goto Apps_Page?"), 
          "</td></tr>\n";
    print "</table>";

#xxxxxxxx
    print "<table>";
    print "<tr><td>Search : ", $q->textfield(-name=>'search',
	                                      -default=>'',
	                                      -size=>30,
	                                      -maxlength=>50),
           "</td><td>",  $q->submit(-name=>'edit', -value=>"go"), "</td></tr>\n";
    print "</table>";
          

   return; 
}
sub do_Delete
{
   my $this_appl = $q->param("Job_Appl");
   my $jid = $q->param("Job_ID");
   my $del_dir = "";
   if ( $q->param("Delete_App") eq "Delete?")
   {
      print "<h2> Confirm Deletion of Applicant: $this_appl   for Job $jid</h2>";
      print "<p>", $q->submit(-name=>'Delete_App', -value=>"Yes_Delete"), "</p>\n";

      $del_dir = $jid. "/" . $this_appl;
      print $q->hidden('Del_dir', $del_dir), "\n"; 
#      print $q->hidden('Job_Appl',$this_appl ),"\n";
   } elsif ( $q->param("Delete_App") eq "Yes_Delete")
   {
      $del_dir = $q->param('Del_dir');
      print " deletion confirmed...Job_Appl: $del_dir<br />";
      Job_Appl_Info3::Delete_Applicant($del_dir);
   } else
   {
      print " Danger Danger... <br />";
   }
   print "<p>", $q->submit(-name=>'edit', -value=>"back"), "</p>\n";
   print "ttfn ... <br />";
   return;
}
sub  do_show_appl
{
# show all the applicant's data...
   my $this_appl = shift;
## 2008-10-17 skip display & edit
    do_Edit_App();
   return;

   my $jid = $q->param("Job_ID");

   my $out = Job_Appl_Info3::html_appl($this_appl,$jid);
   print $out;
   print $q->submit(-name=>'Back',-value=>"Back"), "<br />\n";
   print $q->submit(-name=>'Edit_App',-value=>"Edit"), "<br />\n";
#   print "<p>add edit button here </p>";
   print $q->hidden('Job_ID', $jid), "\n"; 
   print $q->hidden('Job_Appl',$this_appl ),"\n";

   return;
}

sub do_Referees
{
    print "<table>";
    my $col = ' style="background-color: #ee88ff "';
    my $col2 = 'colspan="2"';
    foreach my $i (0..2)
    {
        print "<tr><td $col $col2>", "Info for referee No $i </td></tr>\n";
        print "<tr><td> name :  </td><td></td></tr>\n";
        print "<tr><td> email :  </td><td></td></tr>\n";
        print "<tr><td> Date Received :  </td><td></td></tr>\n";
    }
    print "</table>\n";
}


sub Format_Tel
{
    my $ja = shift;
    my $out = "";
    my $home = $ja->htel ? $ja->htel : "no htel";
    my $off = $ja->otel ? $ja->otel : "no otel";
    $out .= $home  . " (home)  " . $off . "(office) ";
  

}
sub Format_Deg
{
    my $ja = shift;
    my $out = "";
    $out .= $ja->LastDegree . " ( " . $ja->YearConferred . " )";
    $out .= " from " . $ja->Grad_From;

}
sub Format_Addr
{
    my $ja = shift;
    my $out = "";
    my $nl = "<br />";
    my $Prov = $ja->prov ? $ja->prov : " no_Prov";
    my $Count = $ja->country ? $ja->country : " no_country";
    my $pcode = $ja->pcode ? $ja->pcode: " no_postal";
    $out .= $ja->maddr . $nl. $ja->City . $nl .$Prov .$nl .$Count;
    $out .= $nl . $pcode;
}

sub do_Read_File
{
   print "<h2>do_Read_File: results of uploading...</h2>\n";
   use Digest::MD5;
   my $this_appl = $q->param("Job_Appl");
   my $jid       = $q->param("Job_ID");
   my $nmod;
  #  print "<p> set the dir<br />";  
   Job_Appl_Info3::Set_xml_dir($jid);
 
   my $ja = Job_Appl_Info3::rd_file($this_appl);
   my $outfile;
   my $outmsg = "";

   my %info = Job_Appl_Info3::File_Prompts();

   foreach my $t (sort {$info{$a}{sort} cmp $info{$b}{sort} } keys %info)
   {
      my $uf = "upload_" .$t;
      my $filename = $q->param($uf);

## handle any ancillary flags:
      my $aflag = "Ancill_" .$t;

      if ($q->param($aflag)) 
      {
         print " have a aflag for $t <br />"; 
         $ja->$t("In_CV_File");
         $nmod++;
      }
      next unless $filename;

      my $tag  = $t;
      $outfile = Job_Appl_Info3::abs_file_path($jid,$this_appl,$tag);    
      print "outfile is $outfile <br />\n";
      open (OUTFILE,">$outfile");
     
      while (<$filename>) { print OUTFILE; }
       close OUTFILE;
       open (OUTFILE,"$outfile");
       binmode(OUTFILE);
       my $md5 =  Digest::MD5->new->addfile(*OUTFILE)->hexdigest;
       print "calucated the md5 sum as $md5<br />";
       close OUTFILE;
       my $size = -s $outfile;
       $outmsg .= "<p> Remote file <strong>$filename</strong> copied: <br />size: $size bytes<br />";
       $outmsg .= "   md5sum: $md5<br /></p>\n";


       $ja->$tag($outfile);
       $nmod++;
   } 

    my $ltag = "other_label";
    if ( $q->param($ltag) )
    {

        $ja->$ltag($q->param($ltag) );
        $nmod++;
        $outmsg .= " $ltag is saved<br />\n";
    }


###	save the letter labels:: 
   for my $i (1..7)
#   foreach my $ltag (qw { Label_let_1 Label_let_2 Label_let_3 Label_let_4 } )
   {
      my $ltag = "Label_let_". $i;
      my $rtag = "Use Remote Name for Letter ". $i;
      if ( $q->param($ltag) )
      {
         #next unless $q->param($ltag);
         print "saving label $ltag as: ", $q->param($ltag), "<br />";
         $ja->$ltag($q->param($ltag) );
         $nmod++;
         $outmsg .= " $ltag is saved<br />\n";
      }
      if ( $q->param($rtag) )
      {
         my $uf = "upload_Ref_let_" .$i;
    #     print "file tag is $uf <br />";
         my $filename = $q->param($uf); 
           
     #    print "saving label $rtag into $ltag as: ", $filename, "<br />";
         $ja->$ltag($filename);
         $nmod++;
         $outmsg .= " $ltag is saved<br />\n";
      }

   }
   print $outmsg;

#save the new info
 #print "do_Read_File:: call Job_Appl_Info3::saveit $jid <br />";

   Job_Appl_Info3::saveit($ja, $jid) if $nmod;

   print $q->submit(-name=>'Back',-value=>"Back"), "\n";
   print $q->hidden('Job_ID', $jid), "\n"; 
   print $q->hidden('Job_Appl',$this_appl ),"\n";
   return;
}
sub do_search
{
    print "<h2> do_search </h2>";

    my $search_string = $q->param('search');
    $search_string =~ s/\*/.*/;
 
    my %All_Apps = Get_All_Apps();
    foreach $a (keys %All_Apps)
    {
       next unless ($a =~ /$search_string/);
       my $v = $a . ":" . $All_Apps{$a};
       print $q->submit(-name=>'Sear_Appl',-value=>$v), " -- <br />";
    }

    print "or, return Job Index Page ", 
           $q->submit(-name=>'edit',-value=>'back'), 
          "<br />";
}
sub Get_All_Apps
{
   my %All_Apps;
   foreach my $cj ( Job_Ad_MetaData::Get_Current_Jobs())
   {
       my $lab = $cj->text . " id = " . $cj->id;
       my @appl = Job_Appl_Info3::Get_Appl_FileNames($cj->id);
       foreach my $j (@appl) {#print "do_mainpage:: file is $j <br />\n"; 
                                $All_Apps{$j} = $cj->id;}
   }
   return %All_Apps;
}
sub do_Sear_Appl
{
   my $in = shift;
   my ($app, $jid) = split ":", $in;
#   print "<h2>do_Sear_Appl::  input is $app & $jid</h2>";
 
   $q->param(-name=>"Job_ID", -value=>$jid);
   do_admin_upload($app);

   return; 
}
sub do_Edit_App
{
   my $this_appl = $q->param("Job_Appl");
   my $jid = $q->param("Job_ID");
   my $appfile = $jid ."/" . $this_appl;
   my $app_data = Job_Appl_Info3::rd_file($appfile);
   print "<h2> do_Edit_App:: Please Use !!! </h2>";
   my $tdtopright = '<td valign="top" align="right">';
   my $tdtop      = '<td valign="top">';
   my %element_info = Job_Appl_Info3::get_element_info();
   my %cat_label = ( pers => "Personal Information:",
                     prof => "Professional Information:",
                     cont => "Contact Information:",
                     int =>  "Internal Information",
                     refs => "Reference Contacts");
 
    print '<table border="0" cellpadding="4" cellspacing="6">', "\n";

    my $fspace = $sp . ":-->". $sp;
    foreach my $cat ( qw [ pers cont prof refs ]) #int])
    {
       print qq{<tr  bgcolor="#CCCCFF"">};
       print qq{<td colspan="2">$cat_label{$cat} </td></tr>};
       foreach my $t ( sort {$element_info{$cat}{$a}{rank} <=>
                             $element_info{$cat}{$b}{rank} } 
                       keys %{ $element_info{$cat}} )
       {  
          my $prompt =  $element_info{$cat}{$t}{prompt};  
          print qq{<tr>$tdtopright  $prompt: </td>};
          my $value = $app_data->$t ? $app_data->$t : "";
#klugde for Phd default...
          $value = "PhD" if ( $t eq "LastDegree" and $value eq "" );
          my $out = input_query(\%{$element_info{$cat}{$t}}, $t, $value);
          print " "x4, $tdtop, "$out</td></tr>\n";
        }
     }
    foreach my $cat ( qw [ int ])
    {
      print '<tr  bgcolor="#FFCCFF""><td colspan="2">',"$cat_label{$cat} </td></tr>\n";
      foreach my $t ( sort {$element_info{$cat}{$a}{rank} <=>
                      $element_info{$cat}{$b}{rank} } keys %{ $element_info{$cat}} )
      {  
         my $prompt =  $element_info{$cat}{$t}{prompt};  
         
       #   print "<tr>$tdtopright  $prompt: </td>\n";
         my $value = $app_data->$t ? $app_data->$t : "";
         my $out = $value;
      #  print "Doc::: $t --> $out <br />";
         if (grep $t=~/$_/, (qw [ Status Conf special] ))
         {
     
            # print "<tr>$tdtopright  $prompt: xx</td>\n";  
             $out = input_query(\%{$element_info{$cat}{$t}}, $t, $value);
            # print " "x4, $tdtop, "$out</td></tr>\n";
        
         } elsif (grep /$t/, (qw [ CV_File Pubs Research Teach ] ))
         {
             if ($value =~ /^In_CV/)
             {
                 $out = $q->textfield(-name=>$t,-size=>30, -default=>$value);
             } else
             {
                 my $ckbox = "del_".$t;
                 $out =  $q->checkbox(-name=>$ckbox) . $fspace .$out;
              }
 #            my $out = input_query(\%{$element_info{$cat}{$t}}, $t, $value);
          }
          if ($t =~ /^Ref/ or
              $t =~ /^other/)
          {
              if ($value )
              {
                  my $ckbox = "del_".$t;
                  $out =  $q->checkbox(-name=>$ckbox) . $fspace .$out;
              } else
              {
                 $out= " <em>not entered</em>";
              }
          }
          if ($t =~ /abel/)
          {
                
           #   if ($value )
           #   {
                  $out = $q->textfield(-name=>$t,-size=>30, -default=>$value);
         
           #   } else
           #   {
           #      $out= " <em>not entered</em>";
          #    }
          }
             print "<tr>$tdtopright  $prompt: </td>\n";
             print " "x4, $tdtop, "$out</td></tr>\n";
             print $q->hidden($t, $value), "\n"; 
        }
     }
   print "</table>\n";
   print $q->submit(-name=>'Save_Edits',-value=>"Save"), "\n";
   print $sp;
   print $q->submit(-name=>'Saved_Edits',-value=>"Bail"), "\n"; 
   print $q->hidden('Job_ID', $jid), "\n"; 
   print $q->hidden('Job_Appl',$this_appl ),"\n";
   return;
}
sub do_update
{
    print "<h2>do_update</h2>\n";

    my @es = Job_Appl_Info3::get_elements();
    my $ja = new Job_Appl_Info3;
    my $jid = $q->param(-name=>"Job_ID");
    my $this_appl = $q->param("Job_Appl");
    my @names = $q->param;
    my $nlets = 4;
    my @Deletes;
    my %File_labels = ( "other_file" => "label");
    foreach my $l ( 1..4) {$File_labels{"Ref_let_$l"} = "Label_let_$l"; }
 
    foreach my $n (@names)
    {
       next unless ($n =~ /^del/);
       next unless ( $q->param($n) );
       my $file = $n;
       $file =~ s/del_//;
   #    my $out = ($q->param($File_labels{$file})) 
  #             ? "<br />label : ". $q->param($File_labels{$file}) 
   #            : "$file";

       $q->param($File_labels{$file},"") if $q->param($File_labels{$file});
       $q->param($file, "");
  #     print "<p>file to delete --> $n -->", $q->param($file);
  #     print "$out </p>\n";
       push @Deletes, $file;
    }

    foreach my $e (@es)
    {  
      my $value = $q->param(-name=>$e) ? $q->param(-name=>$e): "";
      $value = "Not entered" if ($e eq "citizenship" and $value =~ /select/);
#      print "Save_params:: element $e --> ", $value, "<br />\n";
      $ja->$e($value);
    }
    Job_Appl_Info3::Update($ja, $jid, @Deletes);

   print "<p> Update for $this_appl in Comp # $jid appears to have been successful </p>\n";

   print $q->hidden('Job_ID', $jid), "\n"; 
   print $q->hidden('Job_Appl',$this_appl ),"\n";
   print $q->submit(-name=>'Saved_Edits',-value=>"Return to Upload"), "\n";
   
   return; 
}
sub input_query
{
   my $e_info = shift;
   my $t = shift;
   my $v = shift;
   my $out;
   if ($e_info->{qtype} eq "text")
   {
      $out .= '<input type="text" name="' 
           .  $t
           .  '" size="'
           .  $e_info->{nchar}  
           .  '"  maxlength="'
           .  $e_info->{maxchar}
           .  '" value="' . $v . '"'
           . ">\n";
 
   } elsif ($e_info->{qtype} eq "radio")
   {
      
      foreach my $ll (0..$#{$e_info->{label}})
      {
         $out .= "\n" . " "x12;
  
         my $val = $e_info->{value}[$ll];
         my $check = ($v eq $val) ? "checked" : "";
         $out .= '<input type="radio" name="'
              .  $t
              .  '" value="' 
              .   $val
              .   '" ' 
              .   $check . '>' . "$e_info->{label}[$ll]\n";
      }
   } elsif ($e_info->{qtype} eq "pulldown")
   {
      $out = '<select name="' . $t . '" size="1">' ."\n";
      foreach my $ll (0..$#{$e_info->{label}})
      {
         my $val = $e_info->{value}[$ll];
         my $l = $e_info->{label}[$ll];
         my $select = ($v eq $l) ? "selected" : "";
         $out .= '     <option name="' .$t.  '" '. " $select >" 
              .  "$l</option>\n";
      }
      $out .= "</select>\n";
   }  elsif ($e_info->{qtype} eq "checkbox")
   {
      $out = '<input type="checkbox"' . 
                    ' name ="' . $t . '"'.
                    ' value="' . $e_info->{value} . '">' .
                     $e_info->{label} ;
   } 

   return $out;
}
sub do_mail_list
{
   use Geography::States;
   my $usastates =  Geography::States -> new ("USA");
 
   my $SL = shift;
   print "<h2>do_mail_list:: </h2>";
   my %sl_lab = ( "T" => "Shortlisted",
                  "F" => "Not Shortlisted"
                );
   my $jid = $q->param("edit") || $q->param("Job_ID");
   my @apps = Job_Appl_Info3::Get_Job_Appl_Info($jid);
   my $spec = $q->param("Spec") ? $q->param("Spec") : "";
   my $ncnt = scalar @apps;
   print "<h2>Mailing List Info for Job Applications for $jid has $ncnt </h2>";
   print "<h3>Specialization: $spec<\h3>" if $spec;
#   my @sorted_apps = (sort by_App @apps);
   print "<pre>\n";
   my $i =0;
   print "Num,",
         "Lname",   ",",
         "Fname",   ",",
          "City",   ",",
          "Prov",   ",",
          "PCode",  ",",
          "Country",",",
          "Addr";
       print  "\n";

   foreach my $ja (sort by_App @apps)	#sort by_App
   {
       my $stat = $ja->Status ? $ja->Status : "unk";
#       next unless $ja->specialization =~ /$spec/;
       $i++;
       my $pcode = $ja->pcode;
       printf "%3.3d ", $i;
       print  "'",  $ja->{lname}, "'", ",",  
              "'",  $ja->{fname}, "'", ",";
       my $addr1 = $ja->maddr1;
       $addr1 =~ s/^\s+//;
       my $addr2 = $ja->maddr2;
       $addr2 =~ s/^\s+//;
        my $mout =  $addr1 . " " . $addr2;
       $mout =~ s/,\s+/,/g;
#        $mout =~ s/\r\n/--NL-- /g;
       my $nation = $ja->country;
       $nation = "USA" if Geography::States::IsUSA($nation);
       my $prov = $ja->prov;
       $prov = $usastates->state($prov) if $prov =~ /^\w\w$/ and $nation eq "USA"; 
 
        print  "'", $ja->City, "'", ",",
               "'", $prov, "'", ",",
                "'",$pcode, "'",",",
               "'", $nation, "'",",",
               "'", $mout, "'";               ;
       print  "\n";
   }
   print "There were no $sl_lab{$SL} candidates " if $i == 0 ;
   print "</pre>";

   

   return;
}


sub do_summary_page
{

   print "<h2>do_summary_page:: </h2>";

   my $jid = $q->param("edit") || $q->param("Job_ID");
   my @apps = Job_Appl_Info3::Get_Job_Appl_Info($jid);

   my $ncnt = scalar @apps;
   print "<h2> Summary  Info for Job Applications for $jid has $ncnt </h2>";

#   my @sorted_apps = (sort by_App @apps);

   my %nsex = ();
   my %nfrom = ();
   my %grad  = ();
   foreach my  $ja (sort by_App @apps)	#sort by_App
   {
       my $sex = $ja->gender;
       $nsex{$sex}++;
       my $from = $ja->citizenship;
       $nfrom{$from}++;
       my $gf   = Jobs_HTML::truncate_Unames($ja->Grad_From);
       $grad{$gf}++;
   }

   print qq{ <table> <tr> };
   print qq{ <td>gender:</td><td> Male $nsex{M} </td>
		 <td> Female $nsex{F} </td></tr>};

   print qq{ <td>Citizenship:</td><td> Canadian $nfrom{Canadian} </td>
		 <td> non-Canadian $nfrom{"Non-Canadian"} </td></tr>};
   print qq { <tr> <td> PhD School </td>
		  <td> <table>};
   foreach my $ps ( sort { $grad{$b} <=> $grad{$a}} keys %grad)
   {
       print qq{<tr><td> $ps : $grad{$ps} </td></tr> } ;
   }
   print qq{</table></td></tr>};

   print qq{</table>}; 

   return;
}
